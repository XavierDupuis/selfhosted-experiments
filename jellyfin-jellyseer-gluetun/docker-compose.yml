networks:
  media:
    name: media
    driver: bridge
    # ipam:
    #   driver: default
    #   config:
    #   - subnet: ${DOCKER_SUBNET:?Missing variable DOCKER_SUBNET}
    #     gateway: ${DOCKER_GATEWAY:?Missing variable DOCKER_GATEWAY}

services:
  # https://github.com/qdm12/gluetun/wiki
  gluetun:
    image: qmcgaw/gluetun:v3.39.1
    container_name: gluetun
    restart: unless-stopped
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      - media
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/gluetun:/gluetun
    cap_add:
      - NET_ADMIN
    ports:
      # GLUETUN
      - ${GLUETUN_PROXY_PORT:-8888}:8888/tcp # HTTP proxy
      # - ${GLUETUN_SERVER_PORT:-8000}:8000/tcp # HTTP control server
      # - 8388:8388/tcp # Shadowsocks
      # - 8388:8388/udp # Shadowsocks
      # # JELLYFIN
      # - ${JELLYFIN_WEB_PORT:-8096}:8096 # WebUI Portal
      # # JELLYSEERR
      # - ${JELLYSEERR_WEB_PORT:-5055}:5055 # WebUI Portal
      # QBITORRENT
      - ${QBITTORRENT_WEB_PORT:-3000}:${QBITTORRENT_WEB_PORT:-3000} # WebUI Portal (! MAPPING MUST BE X:X)
      - ${QBITTORRENT_TCP_PORT:-6881}:6881/tcp # Transmission Torrent Port TCP
      - ${QBITTORRENT_UDP_PORT:-6881}:6881/udp # Transmission Torrent Port UDP
      # # PROWLARR
      # - ${PROWLARR_WEB_PORT:-9696}:9696 # WebUI Portal
      # # SONARR
      # - ${SONARR_WEB_PORT:-8989}:8989 # WebUI Portal
      # # RADARR
      # - ${RADARR_WEB_PORT:-7878}:7878 # WebUI Portal
      # # LIDARR
      # - ${LIDARR_WEB_PORT:-8686}:8686 # WebUI Portal
      # # BAZARR
      # - ${BAZARR_WEB_PORT:-6767}:6767 # WebUI Portal
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER:?Missing variable VPN_SERVICE_PROVIDER}
      - OPENVPN_USER=${VPN_USERNAME:?Missing variable VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD:?Missing variable VPN_PASSWORD}
      - SERVER_COUNTRIES=${VPN_SERVER_COUNTRIES}
      - FREE_ONLY=${VPN_FREE_ONLY:?Missing variable VPN_FREE_ONLY}
      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf
      ### COMMON
      - TZ=${TIMEZONE:-UTC}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Gluetun
      - homepage.instance.internal.icon=gluetun.png
      - homepage.instance.internal.description=Lightweight swiss-knife-like VPN client to multiple VPN service providers
      - homepage.instance.internal.widget.type=gluetun
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${GLUETUN_SERVER_PORT:-8000}
    healthcheck: # https://github.com/qdm12/gluetun-wiki/blob/main/faq/healthcheck.md#docker-healthcheck
      test: ["CMD", "/gluetun-entrypoint", "healthcheck"]
      interval: 5s
      timeout: 5s
      start_period: 10s
      retries: 1

  jellyfin:
    image: jellyfin/jellyfin:10.11.0
    container_name: jellyfin
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   - gluetun
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${JELLYFIN_WEB_PORT:-8096}:8096
      - 7359:7359/udp
      - 8920:8920
      - 1900:1900/udp
    # Optional - may be necessary for docker healthcheck to pass if running in host network mode
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
    environment:
      # - JELLYFIN_PublishedServerUrl=${HOST_URL:-http://localhost} # Optional - alternative address used for autodiscovery
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/jellyfin/config:/config
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/jellyfin/cache:/cache
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/movies:/movies
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/videos:/videos
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/youtube:/youtube:ro
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/series:/series
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/music:/music
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.tls.certresolver=myresolver
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - homepage.group=Media
      - homepage.name=Jellyfin
      - homepage.icon=jellyfin.png
      - homepage.description=The Free Software Media System
      - homepage.instance.public.href=https://jellyfin.${DOMAIN:?Missing variable DOMAIN}
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${JELLYFIN_WEB_PORT:-8096}
      - homepage.instance.internal.widget.type=jellyfin
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${JELLYFIN_WEB_PORT:-8096}
      - homepage.instance.internal.widget.key=${JELLYFIN_API_KEY}
      - homepage.instance.internal.widget.enableBlocks=true      # optional, defaults to false
      - homepage.instance.internal.widget.enableNowPlaying=true  # optional, defaults to true

  jellyseerr:
    image: fallenbagel/jellyseerr:2.7.3
    container_name: jellyseerr
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   - gluetun
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${JELLYSEERR_WEB_PORT:-5055}:5055
    environment:
      - LOG_LEVEL=debug
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/jellyseerr/config:/app/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyseerr.tls.certresolver=myresolver
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
      - homepage.group=Media
      - homepage.name=Jellyseerr
      - homepage.icon=jellyseerr.png
      - homepage.description=Request Management and Media Discovery Tool for the Jellyfin Ecosystem
      - homepage.instance.public.href=https://jellyseerr.${DOMAIN:?Missing variable DOMAIN}
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${JELLYSEERR_WEB_PORT:-5055}
      - homepage.instance.internal.widget.type=jellyseerr
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${JELLYSEERR_WEB_PORT:-5055}
      - homepage.instance.internal.widget.key=${JELLYSEER_API_KEY}

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:5.1.2
    restart: unless-stopped
    ### WHEN VPN USED
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
        restart: true
    ### WHEN VPN UNUSED
    # networks:
    #   - media
    # ports:
    #   - ${QBITTORRENT_WEB_PORT:-3000}:${QBITTORRENT_WEB_PORT:-3000} # MAPPING MUST BE X:X
    #   - ${QBITTORRENT_TCP_PORT:-6881}:6881/tcp
    #   - ${QBITTORRENT_UDP_PORT:-6881}:6881/udp
    environment:
      - WEBUI_PORT=${QBITTORRENT_WEB_PORT:-3000}
      - DOCKER_MODS=ghcr.io/themepark-dev/theme.park:qbittorrent
      - TP_THEME=${TP_THEME:-nord}
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/qbittorrent/config:/config
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/downloads:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent.tls.certresolver=myresolver
      - traefik.http.services.qbittorrent.loadbalancer.server.port=${QBITTORRENT_WEB_PORT:-3000}
      - homepage.group=Download
      - homepage.name=Qbittorrent
      - homepage.icon=qbittorrent.png
      - homepage.description=Free and reliable P2P Bitorrent client
      - homepage.instance.public.href=https://qbittorrent.${DOMAIN:?Missing variable DOMAIN}
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${QBITTORRENT_WEB_PORT:-3000}
      - homepage.instance.internal.widget.type=qbittorrent
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${QBITTORRENT_WEB_PORT:-3000}
      - homepage.instance.internal.widget.username=${QBITTORRENT_USERNAME:?Missing variable QBITTORRENT_USERNAME}
      - homepage.instance.internal.widget.password=${QBITTORRENT_PASSWORD:?Missing variable QBITTORRENT_PASSWORD}
    healthcheck: # https://github.com/qdm12/gluetun/issues/641#issuecomment-933856220
      test: "curl -sf https://example.com || exit 1"
      interval: 1m
      timeout: 10s
      retries: 1
      start_period: 30s

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:2.0.5
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   gluetun:
    #     condition: service_healthy
    #     restart: true
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${PROWLARR_WEB_PORT:-9696}:9696
    environment:
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
      - TP_THEME=${TP_THEME:-nord}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/prowlarr/config:/config
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Prowlarr
      - homepage.instance.internal.icon=prowlarr.png
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${PROWLARR_WEB_PORT:-9696}
      - homepage.instance.internal.description=Ultimate Indexer Manager
      - homepage.instance.internal.widget.type=prowlarr
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${PROWLARR_WEB_PORT:-9696}
      - homepage.instance.internal.widget.key=${PROWLARR_API_KEY}

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   - gluetun
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${SONARR_WEB_PORT:-8989}:8989
    environment:
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_THEME=${TP_THEME:-nord}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/sonarr/config/:/config
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/series:/tv
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/downloads:/downloads
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Sonarr
      - homepage.instance.internal.icon=sonarr.png
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${SONARR_WEB_PORT:-8989}
      - homepage.instance.internal.description=Internet PVR for Usenet and Torrents
      - homepage.instance.internal.widget.type=sonarr
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${SONARR_WEB_PORT:-8989}
      - homepage.instance.internal.widget.key=${SONARR_API_KEY}
      - homepage.instance.internal.widget.enableQueue=true # optional, defaults to false

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:5.28.0
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   - gluetun
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${RADARR_WEB_PORT:-7878}:7878
    environment:
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_THEME=${TP_THEME:-nord}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/radarr/config:/config
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/movies:/movies
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/downloads:/downloads
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Radarr
      - homepage.instance.internal.icon=radarr.png
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${RADARR_WEB_PORT:-7878}
      - homepage.instance.internal.description=Movie collection manager for Usenet and BitTorrent
      - homepage.instance.internal.widget.type=radarr
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${RADARR_WEB_PORT:-7878}
      - homepage.instance.internal.widget.key=${RADARR_API_KEY}
      - homepage.instance.internal.widget.enableQueue=true # optional, defaults to false

  lidarr:
    image: lscr.io/linuxserver/lidarr:2.14.5
    container_name: lidarr
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   - gluetun
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${LIDARR_WEB_PORT:-8686}:8686
    environment:
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:lidarr
      - TP_THEME=${TP_THEME:-nord}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/lidarr/config:/config
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/music:/music
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/downloads:/downloads
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Lidarr
      - homepage.instance.internal.icon=lidarr.png
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${LIDARR_WEB_PORT:-8686}
      - homepage.instance.internal.description=Music collection manager for Usenet and BitTorrent
      - homepage.instance.internal.widget.type=lidarr
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${LIDARR_WEB_PORT:-8686}
      - homepage.instance.internal.widget.key=${LIDARR_API_KEY}

  bazarr:
    image: lscr.io/linuxserver/bazarr:1.5.2
    container_name: bazarr
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   - gluetun
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${BAZARR_WEB_PORT:-6767}:6767
    environment:
      ### COMMON
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - UMASK=${UMASK:-0002}
      - TZ=${TIMEZONE:-UTC}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:bazarr
      - TP_THEME=${TP_THEME:-nord}
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/bazarr/config:/config
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/movies:/movies
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/series:/tv
      - ${LIBRARY_DIRECTORY:?Missing variable LIBRARY_DIRECTORY}/downloads:/downloads
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Bazarr
      - homepage.instance.internal.icon=bazarr.png
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${BAZARR_WEB_PORT:-6767}
      - homepage.instance.internal.description=Manages and downloads subtitles
      - homepage.instance.internal.widget.type=bazarr
      - homepage.instance.internal.widget.url=${HOST_URL:-http://localhost}:${BAZARR_WEB_PORT:-6767}
      - homepage.instance.internal.widget.key=${BAZARR_API_KEY}

  byparr:
    container_name: byparr
    image: ghcr.io/thephaseless/byparr:latest
    restart: unless-stopped
    ### WHEN VPN USED
    # network_mode: service:gluetun
    # depends_on:
    #   gluetun:
    #     condition: service_healthy
    #     restart: true
    ### WHEN VPN UNUSED
    networks:
      - media
    ports:
      - ${BYPARR_WEB_PORT:-8191}:8191
    volumes:
      - ${MEDIA_DIRECTORY:?Missing variable MEDIA_DIRECTORY}/byparr/data:/app/screenshots
    labels:
      - homepage.instance.internal.group=Servarr
      - homepage.instance.internal.name=Byparr
      - homepage.instance.internal.icon=mdi-button-cursor
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${BYPARR_WEB_PORT:-8191}
      - homepage.instance.internal.description=FlareSolverr drop-in replacement with FastAPI and nodriver 
