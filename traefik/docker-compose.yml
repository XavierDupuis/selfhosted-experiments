services:
  traefik:
    image: traefik:v3.4.3
    container_name: traefik
    restart: unless-stopped
    network_mode: "host"
    command:
      - --global.sendanonymoususage=false
      # - --log.level=DEBUG
      - --log.filePath=/logs/debug.log
      # - --api.insecure=true

      # Enable docker provider
      # - --providers.docker=true
      # Docker containers not exposed by default
      # - --providers.docker.exposedbydefault=false
      # Docker provider default rule
      # - --providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.compose.service" }}.${DOMAIN:?Missing variable DOMAIN}`)

      # Enable file provider
      - --providers.file=true
      # File provider directory
      - --providers.file.directory=/etc/traefik/config
      # Enable watch for manual configuration
      - --providers.file.watch=true

      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Redirect http to https
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https

      # Enable a dns challenge named "myresolver"
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      # DNS provider for the challenge
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=duckdns
      # Disable the propagation check that occurs before the certificate is issued by the acme provider
      - --certificatesresolvers.myresolver.acme.dnschallenge.disablePropagationCheck=true
      # Delay the check of the propagation of the DNS record before to check the DNS challenge (seconds)
      - --certificatesresolvers.myresolver.acme.dnschallenge.delayBeforeCheck=60
      
      # File or key used for certificates storage.
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      # Email address used for registration.
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:?Missing variable ACME_EMAIL}

      # Enable prometheus metrics
      - --metrics.prometheus=true
      # Expose prometheus metrics on port ${METRICS_PORT:-8081}
      - --entryPoints.metrics.address=:${METRICS_PORT:-8081}
      # Enable the prometheus metrics endpoint
      - --metrics.prometheus.entryPoint=metrics

      # Enable access logs
      - --accesslog=true
      # Access logs file
      - --accesslog.filepath=/logs/access.log
      # Access logs format
      - --accesslog.format=json
      # Access logs buffering size
      - --accesslog.bufferingsize=100

    # ports:
    #   - 80:80
    #   - 443:443
    #   - ${WEB_PORT:-8080}:8080
    # networks:
    #   - monitoring
    # expose:
    #   - ${METRICS_PORT:-8081}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/letsencrypt:/letsencrypt
      - ${DIRECTORY}/traefik/logs:/logs
      - ${DIRECTORY}/traefik/config:/etc/traefik/config
    environment:
      - DUCKDNS_TOKEN=${DUCKDNS_TOKEN:?Missing variable DUCKDNS_TOKEN}
    labels:
      - homepage.group=Network
      - homepage.name=Traefik
      - homepage.icon=traefik.png
      - homepage.instance.internal.href=${HOST_URL:-http://localhost}:${WEB_PORT:-8080}
      - homepage.description=Cloud Native Application Proxy
      - homepage.widget.type=traefik
      - homepage.widget.url=${HOST_URL:-http://localhost}:${WEB_PORT:-8080}